/**
 * Google Maps Platform
 *
 * API Specification for Google Maps Platform
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapi.google.model

import org.openapi.google.model.LatitudeLongitudeLiteral

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param location 
 * @param placeId A unique identifier for a place. All place IDs returned by the Roads API correspond to road segments.
 * @param originalIndex An integer that indicates the corresponding value in the original request. Each value in the request should map to a snapped value in the response. However, if you've set interpolate=true, then it's possible that the response will contain more coordinates than the request. Interpolated values will not have an `originalIndex`. These values are indexed from `0`, so a point with an originalIndex of `4` will be the snapped value of the 5th latitude/longitude passed to the path parameter.
 */

data class SnappedPoint (

    @field:JsonProperty("location")
    val location: LatitudeLongitudeLiteral,

    /* A unique identifier for a place. All place IDs returned by the Roads API correspond to road segments. */
    @field:JsonProperty("placeId")
    val placeId: kotlin.String,

    /* An integer that indicates the corresponding value in the original request. Each value in the request should map to a snapped value in the response. However, if you've set interpolate=true, then it's possible that the response will contain more coordinates than the request. Interpolated values will not have an `originalIndex`. These values are indexed from `0`, so a point with an originalIndex of `4` will be the snapped value of the 5th latitude/longitude passed to the path parameter. */
    @field:JsonProperty("originalIndex")
    val originalIndex: java.math.BigDecimal? = null

)

