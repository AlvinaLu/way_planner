/**
 * Google Maps Platform
 *
 * API Specification for Google Maps Platform
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapi.google.model


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param name The name of this vehicle, capitalized.
 * @param type The type of vehicle used.  * `BUS` - Bus. * `CABLE_CAR` - A vehicle that operates on a cable, usually on the ground. Aerial cable cars may be of the type GONDOLA_LIFT. * `COMMUTER_TRAIN` - Commuter rail. * `FERRY` - Ferry. * `FUNICULAR` - A vehicle that is pulled up a steep incline by a cable. A Funicular typically consists of two cars, with each car acting as a counterweight for the other. * `GONDOLA_LIFT` - An aerial cable car. * `HEAVY_RAIL` - Heavy rail. * `HIGH_SPEED_TRAIN` - High speed train. * `INTERCITY_BUS` - Intercity bus. * `LONG_DISTANCE_TRAIN` - Long distance train. * `METRO_RAIL` - Light rail transit. * `MONORAIL` - Monorail. * `OTHER` - All other vehicles will return this type. * `RAIL` - Rail. * `SHARE_TAXI` - Share taxi is a kind of bus with the ability to drop off and pick up passengers anywhere on its route. * `SUBWAY` - Underground light rail. * `TRAM` - Above ground light rail. * `TROLLEYBUS` - Trolleybus. 
 * @param icon Contains the URL for an icon associated with this vehicle type.
 * @param localIcon Contains the URL for the icon associated with this vehicle type, based on the local transport signage.
 */

data class DirectionsTransitVehicle (

    /* The name of this vehicle, capitalized. */
    @field:JsonProperty("name")
    val name: kotlin.String,

    /* The type of vehicle used.  * `BUS` - Bus. * `CABLE_CAR` - A vehicle that operates on a cable, usually on the ground. Aerial cable cars may be of the type GONDOLA_LIFT. * `COMMUTER_TRAIN` - Commuter rail. * `FERRY` - Ferry. * `FUNICULAR` - A vehicle that is pulled up a steep incline by a cable. A Funicular typically consists of two cars, with each car acting as a counterweight for the other. * `GONDOLA_LIFT` - An aerial cable car. * `HEAVY_RAIL` - Heavy rail. * `HIGH_SPEED_TRAIN` - High speed train. * `INTERCITY_BUS` - Intercity bus. * `LONG_DISTANCE_TRAIN` - Long distance train. * `METRO_RAIL` - Light rail transit. * `MONORAIL` - Monorail. * `OTHER` - All other vehicles will return this type. * `RAIL` - Rail. * `SHARE_TAXI` - Share taxi is a kind of bus with the ability to drop off and pick up passengers anywhere on its route. * `SUBWAY` - Underground light rail. * `TRAM` - Above ground light rail. * `TROLLEYBUS` - Trolleybus.  */
    @field:JsonProperty("type")
    val type: DirectionsTransitVehicle.Type,

    /* Contains the URL for an icon associated with this vehicle type. */
    @field:JsonProperty("icon")
    val icon: kotlin.String? = null,

    /* Contains the URL for the icon associated with this vehicle type, based on the local transport signage. */
    @field:JsonProperty("local_icon")
    val localIcon: kotlin.String? = null

) {

    /**
     * The type of vehicle used.  * `BUS` - Bus. * `CABLE_CAR` - A vehicle that operates on a cable, usually on the ground. Aerial cable cars may be of the type GONDOLA_LIFT. * `COMMUTER_TRAIN` - Commuter rail. * `FERRY` - Ferry. * `FUNICULAR` - A vehicle that is pulled up a steep incline by a cable. A Funicular typically consists of two cars, with each car acting as a counterweight for the other. * `GONDOLA_LIFT` - An aerial cable car. * `HEAVY_RAIL` - Heavy rail. * `HIGH_SPEED_TRAIN` - High speed train. * `INTERCITY_BUS` - Intercity bus. * `LONG_DISTANCE_TRAIN` - Long distance train. * `METRO_RAIL` - Light rail transit. * `MONORAIL` - Monorail. * `OTHER` - All other vehicles will return this type. * `RAIL` - Rail. * `SHARE_TAXI` - Share taxi is a kind of bus with the ability to drop off and pick up passengers anywhere on its route. * `SUBWAY` - Underground light rail. * `TRAM` - Above ground light rail. * `TROLLEYBUS` - Trolleybus. 
     *
     * Values: BUS,CABLE_CAR,COMMUTER_TRAIN,FERRY,FUNICULAR,GONDOLA_LIFT,HEAVY_RAIL,HIGH_SPEED_TRAIN,INTERCITY_BUS,LONG_DISTANCE_TRAIN,METRO_RAIL,MONORAIL,OTHER,RAIL,SHARE_TAXI,SUBWAY,TRAM,TROLLEYBUS
     */
    enum class Type(val value: kotlin.String) {
        @JsonProperty(value = "BUS") BUS("BUS"),
        @JsonProperty(value = "CABLE_CAR") CABLE_CAR("CABLE_CAR"),
        @JsonProperty(value = "COMMUTER_TRAIN") COMMUTER_TRAIN("COMMUTER_TRAIN"),
        @JsonProperty(value = "FERRY") FERRY("FERRY"),
        @JsonProperty(value = "FUNICULAR") FUNICULAR("FUNICULAR"),
        @JsonProperty(value = "GONDOLA_LIFT") GONDOLA_LIFT("GONDOLA_LIFT"),
        @JsonProperty(value = "HEAVY_RAIL") HEAVY_RAIL("HEAVY_RAIL"),
        @JsonProperty(value = "HIGH_SPEED_TRAIN") HIGH_SPEED_TRAIN("HIGH_SPEED_TRAIN"),
        @JsonProperty(value = "INTERCITY_BUS") INTERCITY_BUS("INTERCITY_BUS"),
        @JsonProperty(value = "LONG_DISTANCE_TRAIN") LONG_DISTANCE_TRAIN("LONG_DISTANCE_TRAIN"),
        @JsonProperty(value = "METRO_RAIL") METRO_RAIL("METRO_RAIL"),
        @JsonProperty(value = "MONORAIL") MONORAIL("MONORAIL"),
        @JsonProperty(value = "OTHER") OTHER("OTHER"),
        @JsonProperty(value = "RAIL") RAIL("RAIL"),
        @JsonProperty(value = "SHARE_TAXI") SHARE_TAXI("SHARE_TAXI"),
        @JsonProperty(value = "SUBWAY") SUBWAY("SUBWAY"),
        @JsonProperty(value = "TRAM") TRAM("TRAM"),
        @JsonProperty(value = "TROLLEYBUS") TROLLEYBUS("TROLLEYBUS");
    }
}

